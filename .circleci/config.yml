version: 2.1
executors:
  docker-publisher:
    environment:
      IMAGE_NAME: islamic-network/php74
    docker:
      - image: circleci/buildpack-deps:stretch
jobs:
  build-production:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Production Docker image
          command: docker build -t $IMAGE_NAME:latest .
      - run:
          name: Archive Production Docker image
          command: docker save -o prod.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./prod.tar
  publish-production:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/prod.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            IMAGE_TAG="${CIRCLE_BUILD_NUM}"
            docker tag $IMAGE_NAME:latest $IMAGE_NAME:$IMAGE_TAG
            docker push $IMAGE_NAME:latest
            docker push $IMAGE_NAME:$IMAGE_TAG
  build-dev:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Production Docker image
          command: docker build -f Dockerfile.dev -t $IMAGE_NAME:dev .
      - run:
          name: Archive Production Docker image
          command: docker save -o dev.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./dev.tar
  publish-dev:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/dev.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push $IMAGE_NAME:dev

workflows:
  version: 2
  build-and-publish:
    jobs:
      - build-production:
          filters:
            branches:
              only: master
      - publish-production:
          context: org-global
          requires:
            - build-production
          filters:
            branches:
              only: master
      - build-dev:
          requires:
            - build-production
            - publish-production
          filters:
            branches:
              only: master
      - publish-dev:
          context: org-global
          requires:
            - build-production
            - publish-production
            - build-dev
          filters:
            branches:
              only: master
